1) downaload the hibernate latest version jars from  source forg.com
2) download any database it's db connector jar and paste it into class path
3) add all the jar file of required folder into the class path of project

- hibernate-core is the main jar of hibernate which contains all the hibernate related API's and other jars are the dependencies of hibernate
- download the wamp server which is install both mySql database and GUI tool. it will download apache tomcate php my admin where php my
admin is the GUI tool.

- after installing wamp server run the wamp server and to access the wamp server hit url localhost/phpmyadmin/
-default username is root and password is blank

-  com.mysql.jdbc.driver
-  jdbc:mysql://localhost:3306/gontu


Annotations

-there is two imprtant annotation in the hibernate 
   a) @Entity : this annotation tells the hibernate that the class is the entity it is used just above the class name
   b) @Id annotation is to specify the primary key
   c) @Table(name="nameofthetable") : this annotation use after just below the @Entity annotation , this annotation is used to Create a table with name specified in the annotation
   d) @Column(name = "nameofthecolumn", nullable=true)  gives the name of the column name  , nullable force that either column will be null or not
   e) @Transient   :  if we make any column transient then the column will be ignored by the hibernate while creating the datbase schema
   f) @Temporal(TemporalType.DATE) : if we want to save only date or only time then we can use this annotation in hibernate 
   g) @ID @GeneratedValue(strategy = GenerationType.AUTO) :  @GeneratedValue annotation is used with @ID  to add primary key automatically by the hibernate
   h) @OneToOne(cascade = CascadeType.ALL) it is used for onetoone relation between two tables
   
 - what is the use of mappedby in annotation OneToOne and other relation .
   @OneToMany(cascade = CascadeType.ALL, mappedBy = "tablename")  when we use onetomany bidirectional hibernate will create one other table to map the two table, to avoid the 
   creation of new table we used maapedBy property and give the column name .the side where you have mentioned the mappedBy is known as owning side and the side where you have 
   not mention the mappedBy is known as non-owning side
   
   
 - hbm2ddl can hold 4 properties   create , create-drop , create-update , validate